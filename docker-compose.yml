services:
  web:
    image: europe-west3-docker.pkg.dev/corded-rope-446313-k5/videoflix-repo/videoflix-backend:latest
    build: .
    command: sh -c 'python manage.py collectstatic --noinput && gunicorn videoflix_backend_app.wsgi:application --bind 0.0.0.0:8000 --workers 4 --timeout 120'
    env_file:
      - .env
    networks:
      - app-network
    volumes:
      - static_volume:/app/staticfiles
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      retries: 3
      start_period: 10s

  redis:
    image: redis:alpine
    networks:
      - app-network
    volumes:
      - redis_data:/data

  rq_worker:
    image: europe-west3-docker.pkg.dev/corded-rope-446313-k5/videoflix-repo/videoflix-backend-rqworker:latest
    build: .
    command: python manage.py rqworker --worker-class videoflix_backend_app.simple_worker.SimpleWorker
    env_file:
      - .env
    networks:
      - app-network
    volumes:
      - static_volume:/app/staticfiles
      - ./uploads:/app/uploads
    depends_on:
      redis:
        condition: service_started

  nginx:
    image: nginx:alpine
    networks:
      - app-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/letsencrypt  # Korrigierter Pfad
      - static_volume:/app/staticfiles
      - ./uploads:/app/uploads
    ports:
      - "80:80"
      - "443:443"
    restart: always
    depends_on:
      web:
        condition: service_healthy

  certbot:
    image: certbot/certbot
    volumes:
      - static_volume:/app/staticfiles
      - ./ssl:/etc/letsencrypt
      - ./nginx.conf:/etc/nginx/nginx.conf
    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/app/staticfiles 
      --email deine-echte-email@example.com --agree-tos --no-eff-email 
      -d videoflix.velizar-ganchev-backend.com"
    depends_on:
      web:
        condition: service_healthy

volumes:
  redis_data:
  static_volume:

networks:
  app-network:
    driver: bridge